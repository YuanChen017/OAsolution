[{"/Users/yuan/Desktop/assignment/src/index.js":"1","/Users/yuan/Desktop/assignment/src/App.js":"2","/Users/yuan/Desktop/assignment/src/reportWebVitals.js":"3","/Users/yuan/Desktop/assignment/src/rewards/rewards.js":"4","/Users/yuan/Desktop/assignment/src/data/data.js":"5"},{"size":535,"mtime":1650053913969,"results":"6","hashOfConfig":"7"},{"size":182,"mtime":1650054316302,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1650053913969,"results":"9","hashOfConfig":"7"},{"size":1697,"mtime":1650088155720,"results":"10","hashOfConfig":"7"},{"size":698,"mtime":1650058921340,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k1mht2",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/yuan/Desktop/assignment/src/index.js",[],[],"/Users/yuan/Desktop/assignment/src/App.js",[],[],[],"/Users/yuan/Desktop/assignment/src/reportWebVitals.js",[],[],"/Users/yuan/Desktop/assignment/src/rewards/rewards.js",["29","30"],[],"import dataset from \"../data/data\";\nimport { useState, useEffect } from \"react\";\n\nconst Rewardspoint = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setData(dataset);\n    }, 500);\n  }, []);\n\n  const calculatePoint = (amount) => {\n    let point = 0;\n    if (amount > 50 && amount <= 100) {\n      point += (amount - 50) * 1;\n    } else if (amount > 100) {\n      point += (amount - 100) * 2 + 50 * 1;\n    } else {\n      point += 0;\n    }\n    return point;\n  };\n\n  const newdatasetwithpoints = (input) => {\n    input.map((ele) => {\n      ele.rewardspoint = calculatePoint(ele.purchasecost);\n    });\n    return input;\n  };\n  const newdata = newdatasetwithpoints(data);\n\n  const allcustomers = (set) => {\n    const customername = new Set();\n    const result = [];\n    for (let i = 0; i < set.length; i++) {\n      if (!customername.has(set[i].customer)) {\n        result.push(set[i].customer);\n      }\n      customername.add(set[i].customer);\n    }\n    return result;\n  };\n  const cust = allcustomers(newdata);\n\n  return (\n    <div className=\"datatable\">\n      <table>\n        <tr>\n          <th>Customer</th>\n          <th>Purchase Amount</th>\n          <th>Date</th>\n          <th>Reward points</th>\n        </tr>\n        {newdata.map((ele) => {\n          return (\n            <tr>\n              <td>{ele.customer}</td>\n              <td>{ele.purchasecost}</td>\n              <td>{ele.purchasedate}</td>\n              <td>{ele.rewardspoint}</td>\n            </tr>\n          );\n        })}\n      </table>\n\n      <div className=\"monthly.summary\">\n        <ul> {cust.map((value) => {})}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Rewardspoint;\n","/Users/yuan/Desktop/assignment/src/data/data.js",[],[],{"ruleId":"31","severity":1,"message":"32","line":25,"column":21,"nodeType":"33","messageId":"34","endLine":25,"endColumn":23},{"ruleId":"31","severity":1,"message":"32","line":67,"column":32,"nodeType":"33","messageId":"34","endLine":67,"endColumn":34},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]