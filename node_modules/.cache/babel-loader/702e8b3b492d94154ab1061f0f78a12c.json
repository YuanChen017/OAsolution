{"ast":null,"code":"var _jsxFileName = \"/Users/yuan/Desktop/assignment/src/rewards/rewards.js\",\n    _s = $RefreshSig$();\n\nimport dataset from \"../data/data\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rewardspoint = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setData(dataset);\n    }, 500);\n  }, []);\n\n  const calculatePoint = amount => {\n    let point = 0;\n\n    if (amount > 50 && amount <= 100) {\n      point += (amount - 50) * 1;\n    } else if (amount > 100) {\n      point += (amount - 100) * 2 + 50 * 1;\n    } else {\n      point += 0;\n    }\n\n    return point;\n  };\n\n  const newdatasetwithpoints = input => {\n    input.map(ele => {\n      ele.rewardspoint = calculatePoint(ele.purchasecost);\n    });\n    return input;\n  };\n\n  const newdata = newdatasetwithpoints(data);\n\n  const allcustomers = set => {\n    const customername = new Set();\n\n    for (let i = 0; i < set.length; i++) {\n      if (!customername.has(set[i].customer)) {\n        customername.add(set[i].customer);\n      }\n    }\n\n    return customername;\n  };\n\n  const cust = allcustomers(newdata);\n  console.log(cust);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"datatable\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Purchase Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Reward points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), newdata.map(ele => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ele.customer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ele.purchasecost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ele.purchasedate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ele.rewardspoint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monthlysummary\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cust.forEach(ele => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: ele\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Rewardspoint, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Rewardspoint;\nexport default Rewardspoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rewardspoint\");","map":{"version":3,"sources":["/Users/yuan/Desktop/assignment/src/rewards/rewards.js"],"names":["dataset","useState","useEffect","Rewardspoint","data","setData","setTimeout","calculatePoint","amount","point","newdatasetwithpoints","input","map","ele","rewardspoint","purchasecost","newdata","allcustomers","set","customername","Set","i","length","has","customer","add","cust","console","log","purchasedate","forEach"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,OAAO,CAACL,OAAD,CAAP;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMO,cAAc,GAAIC,MAAD,IAAY;AACjC,QAAIC,KAAK,GAAG,CAAZ;;AACA,QAAID,MAAM,GAAG,EAAT,IAAeA,MAAM,IAAI,GAA7B,EAAkC;AAChCC,MAAAA,KAAK,IAAI,CAACD,MAAM,GAAG,EAAV,IAAgB,CAAzB;AACD,KAFD,MAEO,IAAIA,MAAM,GAAG,GAAb,EAAkB;AACvBC,MAAAA,KAAK,IAAI,CAACD,MAAM,GAAG,GAAV,IAAiB,CAAjB,GAAqB,KAAK,CAAnC;AACD,KAFM,MAEA;AACLC,MAAAA,KAAK,IAAI,CAAT;AACD;;AACD,WAAOA,KAAP;AACD,GAVD;;AAYA,QAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACC,GAAN,CAAWC,GAAD,IAAS;AACjBA,MAAAA,GAAG,CAACC,YAAJ,GAAmBP,cAAc,CAACM,GAAG,CAACE,YAAL,CAAjC;AACD,KAFD;AAGA,WAAOJ,KAAP;AACD,GALD;;AAMA,QAAMK,OAAO,GAAGN,oBAAoB,CAACN,IAAD,CAApC;;AAEA,QAAMa,YAAY,GAAIC,GAAD,IAAS;AAC5B,UAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAI,CAACF,YAAY,CAACI,GAAb,CAAiBL,GAAG,CAACG,CAAD,CAAH,CAAOG,QAAxB,CAAL,EAAwC;AACtCL,QAAAA,YAAY,CAACM,GAAb,CAAiBP,GAAG,CAACG,CAAD,CAAH,CAAOG,QAAxB;AACD;AACF;;AACD,WAAOL,YAAP;AACD,GARD;;AASA,QAAMO,IAAI,GAAGT,YAAY,CAACD,OAAD,CAAzB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOGV,OAAO,CAACJ,GAAR,CAAaC,GAAD,IAAS;AACpB,4BACE;AAAA,kCACE;AAAA,sBAAKA,GAAG,CAACW;AAAT;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKX,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKF,GAAG,CAACgB;AAAT;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAKhB,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAA,kBACGY,IAAI,CAACI,OAAL,CAAcjB,GAAD,IAAS;AACrB,8BAAO;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAtED;;GAAMV,Y;;KAAAA,Y;AAwEN,eAAeA,YAAf","sourcesContent":["import dataset from \"../data/data\";\nimport { useState, useEffect } from \"react\";\n\nconst Rewardspoint = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setData(dataset);\n    }, 500);\n  }, []);\n\n  const calculatePoint = (amount) => {\n    let point = 0;\n    if (amount > 50 && amount <= 100) {\n      point += (amount - 50) * 1;\n    } else if (amount > 100) {\n      point += (amount - 100) * 2 + 50 * 1;\n    } else {\n      point += 0;\n    }\n    return point;\n  };\n\n  const newdatasetwithpoints = (input) => {\n    input.map((ele) => {\n      ele.rewardspoint = calculatePoint(ele.purchasecost);\n    });\n    return input;\n  };\n  const newdata = newdatasetwithpoints(data);\n\n  const allcustomers = (set) => {\n    const customername = new Set();\n    for (let i = 0; i < set.length; i++) {\n      if (!customername.has(set[i].customer)) {\n        customername.add(set[i].customer);\n      }\n    }\n    return customername;\n  };\n  const cust = allcustomers(newdata);\n  console.log(cust);\n\n  return (\n    <div className=\"datatable\">\n      <table>\n        <tr>\n          <th>Customer</th>\n          <th>Purchase Amount</th>\n          <th>Date</th>\n          <th>Reward points</th>\n        </tr>\n        {newdata.map((ele) => {\n          return (\n            <tr>\n              <td>{ele.customer}</td>\n              <td>{ele.purchasecost}</td>\n              <td>{ele.purchasedate}</td>\n              <td>{ele.rewardspoint}</td>\n            </tr>\n          );\n        })}\n      </table>\n\n      <div className=\"monthlysummary\">\n        <ul>\n          {cust.forEach((ele) => {\n            return <li>{ele}</li>;\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Rewardspoint;\n"]},"metadata":{},"sourceType":"module"}