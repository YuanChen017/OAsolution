{"ast":null,"code":"var _jsxFileName = \"/Users/yuan/Desktop/assignment/src/rewards/rewards.js\",\n    _s = $RefreshSig$();\n\nimport dataset from \"../data/data\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rewardspoint = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setData(dataset);\n    }, 500);\n  }, []);\n\n  const calculatePoint = amount => {\n    let point = 0;\n\n    if (amount > 50 && amount <= 100) {\n      point += (amount - 50) * 1;\n    } else if (amount > 100) {\n      point += (amount - 100) * 2 + 50 * 1;\n    } else {\n      point += 0;\n    }\n\n    return point;\n  };\n\n  const newdatasetwithpoints = input => {\n    input.map(ele => {\n      ele.rewardspoint = calculatePoint(ele.purchasecost);\n    });\n    return input;\n  };\n\n  const newdata = newdatasetwithpoints(data);\n\n  const allcustomers = set => {\n    const customername = new Set();\n\n    for (let i = 0; i < set.length; i++) {\n      if (!customername.has(set[i].customer)) {\n        customername.add(set[i].customer);\n      }\n    }\n\n    return customername;\n  };\n\n  const cust = allcustomers(newdata);\n  console.log(typeof cust);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"datatable\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Customer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Purchase Amount \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 30\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Date \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Reward points \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 26\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \" \", newdata.map(ele => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", ele.customer, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", ele.purchasecost, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 50\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", ele.purchasedate, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 54\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", ele.rewardspoint, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 54\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 26\n        }, this);\n      }), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monthlysummary\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\" \", cust.forEach(ele => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 24\n          }, this);\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 14\n  }, this);\n};\n\n_s(Rewardspoint, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Rewardspoint;\nexport default Rewardspoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rewardspoint\");","map":{"version":3,"sources":["/Users/yuan/Desktop/assignment/src/rewards/rewards.js"],"names":["dataset","useState","useEffect","Rewardspoint","data","setData","setTimeout","calculatePoint","amount","point","newdatasetwithpoints","input","map","ele","rewardspoint","purchasecost","newdata","allcustomers","set","customername","Set","i","length","has","customer","add","cust","console","log","purchasedate","forEach"],"mappings":"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","sourcesContent":["import dataset from \"../data/data\";\nimport { useState, useEffect } from \"react\";\n\nconst Rewardspoint = () => {\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        setTimeout(() => {\n            setData(dataset);\n        }, 500);\n    }, []);\n\n    const calculatePoint = (amount) => {\n        let point = 0;\n        if (amount > 50 && amount <= 100) {\n            point += (amount - 50) * 1;\n        } else if (amount > 100) {\n            point += (amount - 100) * 2 + 50 * 1;\n        } else {\n            point += 0;\n        }\n        return point;\n    };\n\n    const newdatasetwithpoints = (input) => {\n        input.map((ele) => {\n            ele.rewardspoint = calculatePoint(ele.purchasecost);\n        });\n        return input;\n    };\n    const newdata = newdatasetwithpoints(data);\n\n    const allcustomers = (set) => {\n        const customername = new Set();\n        for (let i = 0; i < set.length; i++) {\n            if (!customername.has(set[i].customer)) {\n                customername.add(set[i].customer);\n            }\n        }\n        return customername;\n    };\n    const cust = allcustomers(newdata);\n    console.log(typeof cust);\n\n    return ( <\n        div className = \"datatable\" >\n        <\n        table >\n        <\n        tr >\n        <\n        th > Customer < /th> <\n        th > Purchase Amount < /th> <\n        th > Date < /th> <\n        th > Reward points < /th> <\n        /tr> {\n            newdata.map((ele) => {\n                return ( <\n                    tr >\n                    <\n                    td > { ele.customer } < /td> <\n                    td > { ele.purchasecost } < /td> <\n                    td > { ele.purchasedate } < /td> <\n                    td > { ele.rewardspoint } < /td> <\n                    /tr>\n                );\n            })\n        } <\n        /table>\n\n        <\n        div className = \"monthlysummary\" >\n        <\n        ul > {\n            cust.forEach((ele) => {\n                return <li > {} < /li>;\n            })\n        } <\n        /ul> <\n        /div> <\n        /div>\n    );\n};\n\nexport default Rewardspoint;"]},"metadata":{},"sourceType":"module"}